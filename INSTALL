============================================================
INSTALL for GitHub-only portion of Galactic Milieu project
============================================================

This is a Git repository for a project much of which already
exists on SourceForge.

THIS IS NOT A COPY OF WHAT IS ON SOURCEFORGE.

This will be assuming cron will be running "make"
periodically and "make" will figure out, largely from last
modified dates of files as is normal for "make", what to
actually do (such as git pull and/or svn up...)

WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!!

Does that sound safe/secure to you?!?!?!

If so, please think again and/or harder!

It is not! It is stupid to run this crap! Are you out of
your mind!?!?!

Oh sure I run it, why the heck not, I write it. Oh wait,
no, I DO NOT RUN IT! Some other username on one of my
machines runs it. A disempowered user. Nonetheless, even
a disempowered user can do while fork or not fork fork
or other trivial infinite loops to eat system resources.

So don't run this crap, use it as inspiration to run
your part of the project your way or something and don't
blame me if you don't like what it does.

WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!!

------------------------------------------------------------

Initially I am just going to assume this will be run on a
Linux box not much different from my own, and that any
differences from my own are "somebody else's problem".

------------------------------------------------------------

My own happens to be a 64-bit Fedora Core 15 box at time of
writing. In case you might have wondered.

------------------------------------------------------------

I am running Crossfire RPG, umpteen peer to peer crypto-
coin daemons, a bunch of eggdrop IRC bots, and have Freeciv
and Battle for Wesnoth installed but not actually running at
this moment at time of writing.

------------------------------------------------------------

If you are running a similar box, you might be able to
simply clone this github project and run "make", if I have
actually included a Makefile by the tiem you read this.

------------------------------------------------------------

BUT SHEESH! ARE YOU FOOL ENOUGH TO ACTUALLY DO THAT?!?!

If so, why not bite the whole biscuit: tell cron to do
a make periodically. Hopefully it will be clever enough
(someday anyway) to clue you in about doing that, if it
is clever enough to figure out whether you already did it.

The rest, as they say, will be history. Catastrophe? Fun?
Merely an automated attempt to try to keep up with some
aspects of the Galact Milieu? Run it -or "simply read
the code"- and see, AT YOUR OWN RISK, AFTER DOING YOUR
OWN DUE DILIGENCE, if at all.

------------------------------------------------------------

What, you're still here? Okay, okay, here is the install
plan-so-far...

It will be expected at runtime that CONFIGURATION.inc
will exist. It will be a file the admin changed and might
change again, thus it is data that can vary, thus logically
it probably should be someplace in /var if root access
is used to install, and in $GM_VAR_DIR regardless.

That might be too confusing for some wannabe-admins, so
maybe initially / for now we will allow it to sit right
here in the main dir of the repo; we will try to ensure
the upstream will not trash it with some new version
from up stream.

We provide CONFIGURATION.distro as template or example
and hope to encourage/guide admins to create their own
CONFIGURATION.inc containing all the configuration
settings set the way they want/like them.

The main Makefile, once we start writing it, will be
intended for use by crontab-regulated periodic make
invocations, but in the event that CONFIGURATION.inc
does not exist or some other catastrophe occurs, it
should try to bring matters to the attention of the
admin to get some human intervention to happen.

Maybe the best default thing for make to do if make
is invoked manually before installing and configuring
has been done might be to dump this INSTALL file out
stdout or stderr as way to try to clue-in the user aka
admin.

CRONTAB:

I have started a home/gm directory as a sample/example
dedicated-Galactic-Milieu-username's home directory.

That lets me put a run-at-reboot.sh and any other
scripts for that user's crontab to run where I normally
put such scripts for any user: in their ~/cmds/ directory.


PERMISSIONS and which user+group owns what:

/usr/src/ still seems to be a/the common place for
source code, but I leave such source in root's hands
so actually that is not going to work for me as the
the location of this install at runtime when the
dedicate-user's crontab invokes git pull.

Thus probably somewhere in /var, or somewhere in /home
is where this "GitHub-only portion of the Galactic Milieu
project" should be placed.

The user whose crontab runs make in here, or whom a human
admin logs in as or su's to to run make in here, must
be able to do git pull in here to update the scripts etc.

The general idea of using git though is so that actual
application-data can be imported easily and conveniently
by such means.

Eventually therefore a separation of powers should be
brought in, whereby the user used to do git pull of
application-data need not have the power to change the
code/scripts that are in here.

That is part of why I have a var directory in here.
Eventually the user whose cron keeps data up to date
will not need to be able to write to any part of what
is distributed in here other than var/galacticmilieu
and home/gm (or /home/thatuser, whatever the username
is that is used for that role).

Beyond then we maybe can go back to the more normal kind
of code/scripts disribution model, where such things only
get installed by the trusted user who owns the source code
in /usr/src and is used (via login or su) to do make
install in such sourcecode directories.

Basically this is starting out as a quick and dirty hack,
but can be improved later if it actually works and anyone
other than I actually wants to use any of it.

============================================================
